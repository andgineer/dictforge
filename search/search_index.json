{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"dictforge","text":"<p>Forge Kindle-ready dictionaries for every language</p>"},{"location":"#quick-start","title":"Quick start","text":"<p>Install the utility</p> <pre><code>dictforge --kindlegen-path \"/Applications/Kindle Previewer 3.app/Contents/lib/fc/bin/kindlegen\" sr en\n</code></pre> <ul> <li>On the first run, dictforge downloads the Wiktionary dump (~20 GB compressed); subsequent runs reuse it.</li> <li>The example command builds a Serbo-Croatian \u2192 English dictionary in the <code>build/</code> folder.</li> <li>Copy the generated MOBI file to <code>Documents/Dictionaries/</code> on your Kindle, or to <code>Documents/</code> if <code>Dictionaries</code> is missing.</li> <li>While reading, long-press a word to reveal the dictionary. Because Kindle does not support some languages, such as Serbian,   you may need to select the dictionary manually the first time via <code>Dictionary</code> \u2192 <code>Select new dictionary</code>.</li> </ul>"},{"location":"#kindle-language-workarounds","title":"Kindle language workarounds","text":"<p>Kindle links a dictionary automatically based on the language stored in the ebook metadata.</p> <p>Unfortunately the reader supports only a narrow list of languages for dictionaries \u2013 see Amazon\u2019s supported Kindle language list.</p> <p>Pick any (otherwise unused) supported language both in the <code>--kindle-lang</code> option and, preferably, in the book metadata; the dictionary will then attach automatically.</p> <p>If you use Calibre, set that language before converting the book to MOBI.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installing-pipx","title":"Installing pipx","text":"<p><code>pipx</code> creates isolated environments to avoid conflicts with existing system packages.</p> macOSLinuxWindows <p>Run in the terminal: <pre><code>brew install pipx\npipx ensurepath\n</code></pre></p> <p>First, ensure Python is installed. <pre><code>python3 -m pip install --user pipx\npython3 -m pipx ensurepath\n</code></pre></p> <p>First, install Python if it's not already installed. <pre><code>python -m pip install --user pipx\n</code></pre></p>"},{"location":"installation/#installing-dictforge","title":"Installing <code>dictforge</code>","text":"<p>Run in the terminal or command prompt:</p> <pre><code>pipx install dictforge\n</code></pre>"},{"location":"installation/#installing-kindle-previewer","title":"Installing Kindle Previewer","text":"<p><code>dictforge</code> invokes Amazon's <code>kindlegen</code> utility to generate Kindle dictionaries. Install Kindle Previewer 3.</p> <p>Launch Kindle Previewer once after installation to extract the embedded <code>kindlegen</code> binary.</p> <p>In newer versions of Kindle Previewer 3, Amazon has stopped distributing kindlegen as a separate utility \u2014 it is embedded within Kindle Previewer itself and is not installed globally on the system.</p> <p>Therefore, provide the path to <code>kindlegen</code> when running <code>dictforge</code>:</p> macOSWindows <p>dictforge --kindlegen-path \"/Applications/Kindle Previewer 3.app/Contents/lib/fc/bin/kindlegen\" sr en</p> <p>dictforge --kindlegen-path \"%LocalAppData%\\Amazon\\Kindle Previewer 3\\lib\\fc\\bin\\kindlegen.exe\" sr en</p> <p>More details: Installing Kindlegen.</p>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#dictforge","title":"dictforge","text":"<p>Forge Kindle-compatible dictionaries for every language</p> <p>The file is mandatory for build system to find the package.</p>"},{"location":"reference/#dictforge-modules","title":"Modules","text":""},{"location":"reference/#dictforge.builder","title":"dictforge.builder","text":""},{"location":"reference/#dictforge.builder-classes","title":"Classes","text":""},{"location":"reference/#dictforge.builder.Builder","title":"dictforge.builder.Builder","text":"<p>Thin wrapper around ebook_dictionary_creator. Aggregates entries from configured sources and exports Kindle dictionaries.</p> Attributes dictforge.builder.Builder.cache_dir <code>instance-attribute</code> <pre><code>cache_dir = cache_dir\n</code></pre> <code></code> dictforge.builder.Builder.session <code>instance-attribute</code> <pre><code>session = Session()\n</code></pre> Functions <code></code> dictforge.builder.Builder.build_dictionary <pre><code>build_dictionary(in_langs: list[str], out_lang: str, title: str, shortname: str, outdir: Path, kindlegen_path: str, include_pos: bool, try_fix_inflections: bool, max_entries: int, kindle_lang_override: str | None = None) -&gt; dict[str, int]\n</code></pre> <p>Build the primary dictionary and any merged extras, returning entry counts.</p> <code></code> dictforge.builder.Builder.ensure_download_dirs <pre><code>ensure_download_dirs(force: bool = False) -&gt; None\n</code></pre> <p>Delegate download preparation to each configured source.</p>"},{"location":"reference/#dictforge.builder-functions","title":"Functions","text":""},{"location":"reference/#dictforge.config","title":"dictforge.config","text":""},{"location":"reference/#dictforge.config-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.config.DEFAULTS","title":"dictforge.config.DEFAULTS  <code>module-attribute</code>","text":"<pre><code>DEFAULTS = {'default_out_lang': 'English', 'merge_in_langs': '', 'include_pos': False, 'try_fix_inflections': False, 'cache_dir': '.wiktex-cache'}\n</code></pre>"},{"location":"reference/#dictforge.config-functions","title":"Functions","text":""},{"location":"reference/#dictforge.config.config_dir","title":"dictforge.config.config_dir","text":"<pre><code>config_dir() -&gt; Path\n</code></pre> <p>Return the per-user configuration directory for DictForge settings.</p>"},{"location":"reference/#dictforge.config.config_path","title":"dictforge.config.config_path","text":"<pre><code>config_path() -&gt; Path\n</code></pre> <p>Return the full filesystem path to the DictForge TOML config file.</p>"},{"location":"reference/#dictforge.config.load_config","title":"dictforge.config.load_config","text":"<pre><code>load_config() -&gt; dict[str, Any]\n</code></pre> <p>Load configuration values, overlaying user overrides on top of defaults.</p>"},{"location":"reference/#dictforge.config.save_config","title":"dictforge.config.save_config","text":"<pre><code>save_config(data: dict[str, Any]) -&gt; None\n</code></pre> <p>Persist configuration values to TOML without relying on extra deps.</p>"},{"location":"reference/#dictforge.kindle","title":"dictforge.kindle","text":""},{"location":"reference/#dictforge.kindle-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.kindle.KINDLE_SUPPORTED_LANGS","title":"dictforge.kindle.KINDLE_SUPPORTED_LANGS  <code>module-attribute</code>","text":"<pre><code>KINDLE_SUPPORTED_LANGS = {'af', 'sq', 'ar', 'ar-dz', 'ar-bh', 'ar-eg', 'ar-iq', 'ar-jo', 'ar-kw', 'ar-lb', 'ar-ly', 'ar-ma', 'ar-om', 'ar-qa', 'ar-sa', 'ar-sy', 'ar-tn', 'ar-ae', 'ar-ye', 'hy', 'az', 'eu', 'be', 'bn', 'bg', 'ca', 'zh', 'zh-hk', 'zh-cn', 'zh-sg', 'zh-tw', 'hr', 'cs', 'da', 'nl', 'nl-be', 'en', 'en-au', 'en-bz', 'en-ca', 'en-ie', 'en-jm', 'en-nz', 'en-ph', 'en-za', 'en-tt', 'en-gb', 'en-us', 'en-zw', 'et', 'fo', 'fa', 'fi', 'fr', 'fr-be', 'fr-ca', 'fr-lu', 'fr-mc', 'fr-ch', 'ka', 'de', 'de-at', 'de-li', 'de-lu', 'de-ch', 'el', 'gu', 'he', 'hi', 'hu', 'is', 'id', 'it', 'it-ch', 'ja', 'kn', 'kk', 'x-kok', 'ko', 'lv', 'lt', 'mk', 'ms', 'ms-bn', 'ml', 'mt', 'mr', 'ne', 'no', 'no-bok', 'no-nyn', 'or', 'pl', 'pt', 'pt-br', 'pa', 'rm', 'ro', 'ro-mo', 'ru', 'ru-mo', 'sz', 'sa', 'sr-latn', 'sk', 'sl', 'sb', 'es', 'es-ar', 'es-bo', 'es-cl', 'es-co', 'es-cr', 'es-do', 'es-ec', 'es-sv', 'es-gt', 'es-hn', 'es-mx', 'es-ni', 'es-pa', 'es-py', 'es-pe', 'es-pr', 'es-uy', 'es-ve', 'sx', 'sw', 'sv', 'sv-fi', 'ta', 'tt', 'te', 'th', 'ts', 'tn', 'tr', 'uk', 'ur', 'uz', 'vi', 'xh', 'zu'}\n</code></pre>"},{"location":"reference/#dictforge.kindle-classes","title":"Classes","text":""},{"location":"reference/#dictforge.kindle.KindleBuildError","title":"dictforge.kindle.KindleBuildError","text":"<p>               Bases: <code>RuntimeError</code></p> <p>Raised when Kindle-specific tooling fails or receives invalid configuration.</p>"},{"location":"reference/#dictforge.kindle-functions","title":"Functions","text":""},{"location":"reference/#dictforge.kindle.kindle_lang_code","title":"dictforge.kindle.kindle_lang_code","text":"<pre><code>kindle_lang_code(code: str | None, override: str | None = None) -&gt; str\n</code></pre> <p>Return the Kindle locale code for <code>code</code> or the validated <code>override</code>.</p>"},{"location":"reference/#dictforge.kindlegen","title":"dictforge.kindlegen","text":""},{"location":"reference/#dictforge.kindlegen-functions","title":"Functions","text":""},{"location":"reference/#dictforge.kindlegen.guess_kindlegen_path","title":"dictforge.kindlegen.guess_kindlegen_path","text":"<pre><code>guess_kindlegen_path() -&gt; str\n</code></pre> <p>Best-effort discovery of Kindle Previewer's bundled kindlegen executable.</p>"},{"location":"reference/#dictforge.langutil","title":"dictforge.langutil","text":""},{"location":"reference/#dictforge.langutil-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.langutil.ALIASES","title":"dictforge.langutil.ALIASES  <code>module-attribute</code>","text":"<pre><code>ALIASES = {'sr': 'Serbo-Croatian', 'serbian': 'Serbian', 'srpski': 'Serbian', 'sc': 'Serbo-Croatian', 'serbo-croatian': 'Serbo-Croatian', 'hbs': 'Serbo-Croatian', 'hr': 'Croatian', 'croatian': 'Croatian', 'hrvatski': 'Croatian', 'en': 'English', 'eng': 'English', 'english': 'English', 'ru': 'Russian', 'rus': 'Russian', 'russian': 'Russian'}\n</code></pre>"},{"location":"reference/#dictforge.langutil.LANG_MAP","title":"dictforge.langutil.LANG_MAP  <code>module-attribute</code>","text":"<pre><code>LANG_MAP = {'Serbo-Croatian': ('sr', 'Srpsko-hrvatski'), 'Serbian': ('sr', 'Srpski'), 'Croatian': ('hr', 'Hrvatski'), 'English': ('en', 'English'), 'Russian': ('ru', 'Russian')}\n</code></pre>"},{"location":"reference/#dictforge.langutil-functions","title":"Functions","text":""},{"location":"reference/#dictforge.langutil.lang_meta","title":"dictforge.langutil.lang_meta","text":"<pre><code>lang_meta(kaikki_name: str) -&gt; tuple[str, str]\n</code></pre> <p>Return ISO code and human-readable name for a Kaikki language label.</p>"},{"location":"reference/#dictforge.langutil.make_defaults","title":"dictforge.langutil.make_defaults","text":"<pre><code>make_defaults(in_lang_kaikki: str, out_lang_kaikki: str) -&gt; dict[str, str]\n</code></pre> <p>Generate default metadata (title, codes, output dir) for CLI invocations.</p>"},{"location":"reference/#dictforge.langutil.normalize_input_name","title":"dictforge.langutil.normalize_input_name","text":"<pre><code>normalize_input_name(name: str) -&gt; str\n</code></pre> <p>Collapse user input aliases to canonical Kaikki language names.</p>"},{"location":"reference/#dictforge.main","title":"dictforge.main","text":""},{"location":"reference/#dictforge.main-classes","title":"Classes","text":""},{"location":"reference/#dictforge.main-functions","title":"Functions","text":""},{"location":"reference/#dictforge.main.cli","title":"dictforge.main.cli","text":"<pre><code>cli(ctx: Context, in_lang: str | None, out_lang: str | None, merge_in_langs: str | None, title: str, shortname: str, outdir: str, kindlegen_path: str, max_entries: int, include_pos: bool | None, try_fix_inflections: bool | None, kindle_lang: str, cache_dir: str | None, reset_cache: bool, version: bool) -&gt; None\n</code></pre> <p>DictForge build a Kindle dictionary from Wiktionary (Wiktextract/Kaikki) in one go.</p> Usage <p>\b dictforge IN_LANG [OUT_LANG][OPTIONS...] dictforge init</p>"},{"location":"reference/#dictforge.main.cmd_init","title":"dictforge.main.cmd_init","text":"<pre><code>cmd_init() -&gt; None\n</code></pre> <p>Interactive setup: choose default output language and save to config.</p>"},{"location":"reference/#dictforge.progress_bar","title":"dictforge.progress_bar","text":""},{"location":"reference/#dictforge.progress_bar-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.progress_bar.ProgressAdvance","title":"dictforge.progress_bar.ProgressAdvance  <code>module-attribute</code>","text":"<pre><code>ProgressAdvance = Callable[[int], None]\n</code></pre>"},{"location":"reference/#dictforge.progress_bar-functions","title":"Functions","text":""},{"location":"reference/#dictforge.progress_bar.progress_bar","title":"dictforge.progress_bar.progress_bar","text":"<pre><code>progress_bar(*, console: Console, enabled: bool, description: str, total: int | None = None, unit: str = 'entries', refresh_per_second: int = 4) -&gt; Iterator[ProgressAdvance]\n</code></pre> <p>Create a Rich progress context and yield a callback that advances it.</p>"},{"location":"reference/#dictforge.source_base","title":"dictforge.source_base","text":""},{"location":"reference/#dictforge.source_base-classes","title":"Classes","text":""},{"location":"reference/#dictforge.source_base.DictionarySource","title":"dictforge.source_base.DictionarySource","text":"Functions dictforge.source_base.DictionarySource.ensure_download_dirs <pre><code>ensure_download_dirs(force: bool = False) -&gt; None\n</code></pre> <p>Make sure the top-level cache directory hierarchy exists.</p> <code></code> dictforge.source_base.DictionarySource.entry_has_content <pre><code>entry_has_content(entry: Any) -&gt; bool\n</code></pre> <p>Return <code>True</code> when <code>entry</code> should be kept in downstream merges.</p> <code></code> dictforge.source_base.DictionarySource.get_entries <pre><code>get_entries(in_lang: str, out_lang: str) -&gt; tuple[Path, int]\n</code></pre> <p>Entries filtered for the language pair.</p> <code></code> dictforge.source_base.DictionarySource.get_filter_stats <pre><code>get_filter_stats(language: str) -&gt; dict[str, int] | None\n</code></pre> <p>Return cached filter statistics for <code>language</code> if available.</p> <code></code> dictforge.source_base.DictionarySource.log_filter_stats <pre><code>log_filter_stats(language: str, console: Console) -&gt; None\n</code></pre> <p>Log a one-time summary of filtered entries for <code>language</code>.</p> <code></code> dictforge.source_base.DictionarySource.record_filter_stats <pre><code>record_filter_stats(language: str, meta: dict[str, Any]) -&gt; None\n</code></pre> <p>Cache filtered entry statistics for <code>language</code>.</p>"},{"location":"reference/#dictforge.source_kaikki","title":"dictforge.source_kaikki","text":""},{"location":"reference/#dictforge.source_kaikki-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.source_kaikki.ELLIPSE","title":"dictforge.source_kaikki.ELLIPSE  <code>module-attribute</code>","text":"<pre><code>ELLIPSE = '...'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.FILTERED_CACHE_DIR","title":"dictforge.source_kaikki.FILTERED_CACHE_DIR  <code>module-attribute</code>","text":"<pre><code>FILTERED_CACHE_DIR = 'filtered'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.GlossText","title":"dictforge.source_kaikki.GlossText  <code>module-attribute</code>","text":"<pre><code>GlossText = list[str] | str\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.LANGUAGE_CACHE_DIR","title":"dictforge.source_kaikki.LANGUAGE_CACHE_DIR  <code>module-attribute</code>","text":"<pre><code>LANGUAGE_CACHE_DIR = 'languages'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.LANGUAGE_DUMP_URL","title":"dictforge.source_kaikki.LANGUAGE_DUMP_URL  <code>module-attribute</code>","text":"<pre><code>LANGUAGE_DUMP_URL = 'https://kaikki.org/dictionary/{lang}/kaikki.org-dictionary-{slug}.jsonl'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.META_SUFFIX","title":"dictforge.source_kaikki.META_SUFFIX  <code>module-attribute</code>","text":"<pre><code>META_SUFFIX = '.meta.json'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.ProgressAdvance","title":"dictforge.source_kaikki.ProgressAdvance  <code>module-attribute</code>","text":"<pre><code>ProgressAdvance = Callable[[int], None]\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.ProgressFactory","title":"dictforge.source_kaikki.ProgressFactory  <code>module-attribute</code>","text":"<pre><code>ProgressFactory = Callable[..., AbstractContextManager[ProgressAdvance]]\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.RAW_CACHE_DIR","title":"dictforge.source_kaikki.RAW_CACHE_DIR  <code>module-attribute</code>","text":"<pre><code>RAW_CACHE_DIR = 'raw'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.RAW_DUMP_URL","title":"dictforge.source_kaikki.RAW_DUMP_URL  <code>module-attribute</code>","text":"<pre><code>RAW_DUMP_URL = 'https://kaikki.org/dictionary/raw-wiktextract-data.jsonl.gz'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.RESPONSE_EXCERPT_MAX_LENGTH","title":"dictforge.source_kaikki.RESPONSE_EXCERPT_MAX_LENGTH  <code>module-attribute</code>","text":"<pre><code>RESPONSE_EXCERPT_MAX_LENGTH = 200\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.TRANSLATION_CACHE_DIR","title":"dictforge.source_kaikki.TRANSLATION_CACHE_DIR  <code>module-attribute</code>","text":"<pre><code>TRANSLATION_CACHE_DIR = 'translations'\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki-classes","title":"Classes","text":""},{"location":"reference/#dictforge.source_kaikki.KaikkiDownloadError","title":"dictforge.source_kaikki.KaikkiDownloadError","text":"<p>               Bases: <code>RuntimeError</code></p> <p>Raised when Kaikki resources cannot be downloaded.</p>"},{"location":"reference/#dictforge.source_kaikki.KaikkiEntry","title":"dictforge.source_kaikki.KaikkiEntry","text":"<p>               Bases: <code>TypedDict</code></p> <p>Dictionary entry that groups all sense definitions for a single headword.</p> <p><code>senses</code> is the ordered list of meanings (each a <code>KaikkiSense</code>). <code>word</code> stores the lemma being defined.</p> Attributes <code></code> dictforge.source_kaikki.KaikkiEntry.senses <code>instance-attribute</code> <pre><code>senses: list[KaikkiSense]\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiEntry.word <code>instance-attribute</code> <pre><code>word: str\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.KaikkiParseError","title":"dictforge.source_kaikki.KaikkiParseError","text":"<p>               Bases: <code>RuntimeError</code></p> <p>Raised when the Kaikki JSON dump cannot be parsed.</p> Attributes <code></code> dictforge.source_kaikki.KaikkiParseError.colno <code>instance-attribute</code> <pre><code>colno = colno\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiParseError.excerpt <code>instance-attribute</code> <pre><code>excerpt = _load_excerpt() if path else [doc_snippet] if doc_snippet else []\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiParseError.lineno <code>instance-attribute</code> <pre><code>lineno = lineno\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiParseError.original_error <code>instance-attribute</code> <pre><code>original_error = exc\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiParseError.path <code>instance-attribute</code> <pre><code>path = Path(path) if path else None\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.KaikkiSense","title":"dictforge.source_kaikki.KaikkiSense","text":"<p>               Bases: <code>TypedDict</code></p> <p>Definition text that explains what the word means in plain language.</p> <p><code>glosses</code> contains the polished strings shown to the user, for example <code>\"greeting\"</code> or <code>\"domestic cat\"</code>.  <code>raw_glosses</code> keeps the same definitions before any clean-up, so we still accept entries that only have a rough version (e.g. with markup or punctuation fragments).</p> Attributes <code></code> dictforge.source_kaikki.KaikkiSense.glosses <code>instance-attribute</code> <pre><code>glosses: GlossText\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiSense.raw_glosses <code>instance-attribute</code> <pre><code>raw_glosses: GlossText\n</code></pre>"},{"location":"reference/#dictforge.source_kaikki.KaikkiSource","title":"dictforge.source_kaikki.KaikkiSource","text":"<p>               Bases: <code>DictionarySource</code></p> <p>Access and prepare Kaikki (Wiktextract) datasets.</p> Attributes <code></code> dictforge.source_kaikki.KaikkiSource.cache_dir <code>instance-attribute</code> <pre><code>cache_dir = cache_dir\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiSource.session <code>instance-attribute</code> <pre><code>session = session\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiSource.translation_cache <code>property</code> <pre><code>translation_cache: dict[tuple[str, str], dict[str, list[str]]]\n</code></pre> <p>Expose the in-memory translation cache (primarily for tests).</p> Functions <code></code> dictforge.source_kaikki.KaikkiSource.ensure_download_dirs <pre><code>ensure_download_dirs(force: bool = False) -&gt; None\n</code></pre> <p>Make sure the top-level cache directory hierarchy exists.</p> <code></code> dictforge.source_kaikki.KaikkiSource.ensure_language_dataset <pre><code>ensure_language_dataset(language: str) -&gt; Path\n</code></pre> <p>External helper used by tests to warm the per-language Kaikki dump.</p> <code></code> dictforge.source_kaikki.KaikkiSource.entry_has_content <pre><code>entry_has_content(entry: Any) -&gt; bool\n</code></pre> <code></code> dictforge.source_kaikki.KaikkiSource.get_entries <pre><code>get_entries(in_lang: str, out_lang: str) -&gt; tuple[Path, int]\n</code></pre> <p>Entries filtered for the language pair.</p> <code></code> dictforge.source_kaikki.KaikkiSource.get_filter_stats <pre><code>get_filter_stats(language: str) -&gt; dict[str, int] | None\n</code></pre> <p>Return cached filtering statistics for <code>language</code> when available.</p>"},{"location":"reference/#dictforge.source_kaikki-functions","title":"Functions","text":""},{"location":"reference/#dictforge.tatoeba","title":"dictforge.tatoeba","text":""},{"location":"reference/#dictforge.tatoeba-attributes","title":"Attributes","text":""},{"location":"reference/#dictforge.tatoeba.LINK_FIELDS_MIN","title":"dictforge.tatoeba.LINK_FIELDS_MIN  <code>module-attribute</code>","text":"<pre><code>LINK_FIELDS_MIN = 2\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.LINK_FILES","title":"dictforge.tatoeba.LINK_FILES  <code>module-attribute</code>","text":"<pre><code>LINK_FILES = ('links.tar.bz2', 'links.csv.bz2', 'links.tsv.bz2', 'links.csv', 'links.tsv')\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.MAX_WORDS","title":"dictforge.tatoeba.MAX_WORDS  <code>module-attribute</code>","text":"<pre><code>MAX_WORDS = 3\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.SENTENCE_FIELDS_MIN","title":"dictforge.tatoeba.SENTENCE_FIELDS_MIN  <code>module-attribute</code>","text":"<pre><code>SENTENCE_FIELDS_MIN = 3\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.SENTENCE_FILES","title":"dictforge.tatoeba.SENTENCE_FILES  <code>module-attribute</code>","text":"<pre><code>SENTENCE_FILES = ('sentences.tar.bz2', 'sentences.csv.bz2', 'sentences.tsv.bz2', 'sentences.csv', 'sentences.tsv')\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.TATOEBA_EXPORT_ROOT","title":"dictforge.tatoeba.TATOEBA_EXPORT_ROOT  <code>module-attribute</code>","text":"<pre><code>TATOEBA_EXPORT_ROOT = 'https://downloads.tatoeba.org/exports/per_language'\n</code></pre>"},{"location":"reference/#dictforge.tatoeba.TATOEBA_LINKS_ROOT","title":"dictforge.tatoeba.TATOEBA_LINKS_ROOT  <code>module-attribute</code>","text":"<pre><code>TATOEBA_LINKS_ROOT = 'https://downloads.tatoeba.org/exports'\n</code></pre>"},{"location":"reference/#dictforge.tatoeba-classes","title":"Classes","text":""},{"location":"reference/#dictforge.tatoeba.TatoebaError","title":"dictforge.tatoeba.TatoebaError","text":"<p>               Bases: <code>RuntimeError</code></p> <p>Generic integration failure for the Tatoeba source.</p>"},{"location":"reference/#dictforge.tatoeba.TatoebaExamples","title":"dictforge.tatoeba.TatoebaExamples","text":"<p>Download, cache, and expose aligned example pairs from Tatoeba.</p> Functions dictforge.tatoeba.TatoebaExamples.get_examples_for <pre><code>get_examples_for(word: str) -&gt; list[tuple[str, str]]\n</code></pre> <code></code> dictforge.tatoeba.TatoebaExamples.get_gloss_for <pre><code>get_gloss_for(word: str) -&gt; str | None\n</code></pre> <code></code> dictforge.tatoeba.TatoebaExamples.vocabulary <pre><code>vocabulary() -&gt; set[str]\n</code></pre>"},{"location":"reference/#dictforge.tatoeba-functions","title":"Functions","text":""},{"location":"reference/#dictforge.translit","title":"dictforge.translit","text":"<p>Serbian Cyrillic/Latin transliteration without external deps.</p>"},{"location":"reference/#dictforge.translit-functions","title":"Functions","text":""},{"location":"reference/#dictforge.translit.cyr_to_lat","title":"dictforge.translit.cyr_to_lat","text":"<pre><code>cyr_to_lat(text: str) -&gt; str\n</code></pre>"},{"location":"reference/#dictforge.translit.lat_to_cyr","title":"dictforge.translit.lat_to_cyr","text":"<pre><code>lat_to_cyr(text: str) -&gt; str\n</code></pre>"}]}